/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.rlv.cosc60.applications.graphs;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.Set;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author russel
 */
public class ImageFill extends javax.swing.JFrame {

    /**
     * Creates new form ImageFill
     */
    public ImageFill() {
        initComponents();
        this.setTitle( String.format("Fill Color (t = %.2f%%)", threshold * 100) );
        jslideThreshold.setValue(Math.round(threshold* 100));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollImageContainer = new javax.swing.JScrollPane();
        jScrollImageContainerPanel = new javax.swing.JPanel();
        lblImage = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jslideThreshold = new javax.swing.JSlider();
        btnSelectFill = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemOpen = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fill Color");

        jScrollImageContainerPanel.setLayout(new java.awt.GridBagLayout());

        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImageMouseClicked(evt);
            }
        });
        jScrollImageContainerPanel.add(lblImage, new java.awt.GridBagConstraints());

        jScrollImageContainer.setViewportView(jScrollImageContainerPanel);

        getContentPane().add(jScrollImageContainer, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Threshold"));

        jslideThreshold.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jslideThresholdStateChanged(evt);
            }
        });
        jPanel3.add(jslideThreshold);

        jPanel1.add(jPanel3);

        btnSelectFill.setText("Select Fill Color");
        btnSelectFill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSelectFillMouseClicked(evt);
            }
        });
        jPanel1.add(btnSelectFill);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jMenu1.setText("File");

        jMenuItemOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemOpen.setText("Open");
        jMenuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemOpen);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectFillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSelectFillMouseClicked
        if(evt.getButton()== MouseEvent.BUTTON1){
            fillColor = JColorChooser.showDialog(this, "Select a color", fillColor);
        }else{
            fillColor = null;
        }
        btnSelectFill.setBackground(fillColor);
    }//GEN-LAST:event_btnSelectFillMouseClicked

    private void lblImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImageMouseClicked
        if(fillColor!=null && enabled){
            Thread t = new Thread(new Runnable() {
                @Override
                public void run() {
                    enabled = false;
                    jScrollImageContainerPanel.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    fill(new Point(evt.getX(),evt.getY()));
                    enabled = true;
                    jScrollImageContainerPanel.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            });
            t.setDaemon(true);
            t.start();
        }
    }//GEN-LAST:event_lblImageMouseClicked

    private void jslideThresholdStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jslideThresholdStateChanged
        if(enabled){
            threshold = jslideThreshold.getValue()/100.0f;
            this.setTitle( String.format("Fill Color (t = %.2f%%)", threshold * 100) );
        }
    }//GEN-LAST:event_jslideThresholdStateChanged

    private void jMenuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenActionPerformed
        JFileChooser chooser  = new JFileChooser(lastOpenedDir);
        if(chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            try { 
                lastOpenedDir = chooser.getSelectedFile().getParent();
                curImage = ImageIO.read(chooser.getSelectedFile());
                lblImage.setIcon(new ImageIcon(curImage));
                this.pack();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jMenuItemOpenActionPerformed

    private void fill(Point p){
        Color c = new Color(curImage.getRGB(p.x, p.y));
        Queue<Point> q = new LinkedList<>();
        Set<Point> visited = new HashSet<>();
        
        visited.add(p);
        q.add(p);
        while(!q.isEmpty()){
            Point u = q.remove();
//            g.fillRect(u.x, u.y, 1, 1);            
            for(Point v:neighbors(u,c)){
                if(!visited.contains(v)){
                    visited.add(v);
                    q.add(v);
                }
            }
        }
        
        Graphics2D g =  (Graphics2D) curImage.getGraphics();
        g.setColor(fillColor);
        
        for(Point point:visited){
            g.fillRect(point.x, point.y, 1, 1);            
        }
        
        lblImage.getGraphics().drawImage(curImage, 0, 0, null);
        
    }
    
    private List<Point> neighbors(Point p, Color s){
        List<Point> neighbors = new LinkedList<>();
        int eightNeighbors[][] = {{-1,-1},{-1,0},{-1,1},{0,1},{1,1},{1,0},{1,-1},{0,-1}};
        int rowMax = curImage.getHeight()-1;
        int colMax = curImage.getWidth()-1;
        
        for(int i =0;i<eightNeighbors.length;i++){
            if((p.y + eightNeighbors[i][0] >= 0 && p.y + eightNeighbors[i][0] <= rowMax) &&
               (p.x + eightNeighbors[i][1] >= 0 && p.x + eightNeighbors[i][1] <= colMax)){

                Point q = new Point(p.x + eightNeighbors[i][1], p.y + eightNeighbors[i][0]);
                Color t = colorFromPoint(q);
                double d = distance(s, t);
                if(d <= threshold){
                    neighbors.add(q);
                }

            }
        }
        
        return neighbors;
    }
    
    private Color colorFromPoint(Point p){
        return new Color(curImage.getRGB(p.x,p.y));
    }
    
    private double distance(Color s, Color t){
        double d = Math.sqrt(Math.pow(s.getRed() - t.getRed(), 2) + 
                         Math.pow(s.getGreen() - t.getGreen(), 2) +
                         Math.pow(s.getBlue() - t.getBlue(), 2))/255;
        return d > 1 ? 1: d;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImageFill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImageFill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImageFill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImageFill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImageFill().setVisible(true);
            }
        });
    }
    
    private BufferedImage curImage = null;
    private Color fillColor = null;
    private float threshold = 0.2f;
    private boolean enabled = true;
    private String lastOpenedDir = "/";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSelectFill;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemOpen;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollImageContainer;
    private javax.swing.JPanel jScrollImageContainerPanel;
    private javax.swing.JSlider jslideThreshold;
    private javax.swing.JLabel lblImage;
    // End of variables declaration//GEN-END:variables
}
